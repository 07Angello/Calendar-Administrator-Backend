{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","components/hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","helpers/calendar-titles.js","components/ui/Navbar.js","actions/ui.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js","assets/user.svg"],"names":["types","initialState","modalOpen","events","activeEvent","isChecking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","_id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventsLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logOut","LoginScreen","useDispatch","email","password","formLoginValues","handleLoginInputChange","className","src","require","alt","onSubmit","preventDefault","a","response","json","Data","Message","Token","length","toast","warn","setItem","Date","getTime","uid","success","startLogin","placeholder","onChange","required","href","RegisterScreen","password2","formRegisterValues","handleRegisterInputChange","registerUser","customTitles","previous","next","Navbar","useSelector","onClick","uiOpenModal","AddNewFab","DeleteEventFab","Swal","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","getState","console","log","error","CalendarEvent","style","fontWeight","marginRight","customStyles","content","top","left","right","bottom","transform","Modal","setAppElement","now","minutes","seconds","add","finish","clone","initEvent","notes","CalendarModal","startDate","setStartDate","endDate","setEndDate","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","momentStart","momentFinish","isSameOrAfter","eventStartUpdate","eventStartAddNew","autoComplete","id","rows","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","eventSetActive","onSelectSlot","selectable","onView","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","position","newestOnTop","autoClose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iNAAaA,EACI,kBADJA,EAEK,mBAFLA,EAIO,qBAJPA,EAKI,uBALJA,EAOI,kBAPJA,EAQc,6BARdA,EASK,wBATLA,EAUK,wBAVLA,EAWI,wBAXJA,EAaY,qCAbZA,EAeE,eAfFA,EAkBG,gBChBVC,EAAe,CACjBC,WAAW,G,QCWTD,EAAe,CACjBE,OAAQ,GACRC,YAAa,MCdXH,EAAe,CACjBI,YAAY,GCEHC,EAAcC,YAAgB,CACvCC,GHCqB,WAAqC,IAAnCC,EAAkC,uDAA1BR,EAAcS,EAAY,uCAEzD,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIP,WAAW,IAGnB,KAAKF,EACD,OAAO,2BACAS,GADP,IAEIP,WAAW,IAGnB,QACI,OAAOO,IGhBfG,SFY2B,WAAqC,IAAnCH,EAAkC,uDAA1BR,EAAcS,EAAY,uCAE/D,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAaM,EAAOG,UAG5B,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAInB,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIL,YAAa,OAGrB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOW,KACjB,SAAAC,GAAK,OAAMA,EAAMC,MAAQN,EAAOG,QAAQG,IAAQN,EAAOG,QAAUE,OAI7E,KAAKf,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOc,QACjB,SAAAF,GAAK,OAAMA,EAAMC,MAAQP,EAAML,YAAYY,OAE/CZ,YAAa,OAGrB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,YAAMO,EAAOG,WAG5B,KAAKb,EACD,OAAO,eACAC,GAGX,QACI,OAAOQ,IEhEfS,KDFuB,WAAqC,IAAnCT,EAAkC,uDAA1BR,EAAcS,EAAY,uCAC3D,OAASA,EAAOC,MAEZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIJ,YAAY,GACTK,EAAOG,SAGlB,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIJ,YAAY,IAGpB,KAAKL,EACD,MAAO,CACHK,YAAY,GAGpB,QACI,OAAOI,MExBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAiBC,O,wBCPZC,EAAU,WAA0B,IAAxB1B,EAAuB,uDAAR,GAAQ,EAEd2B,mBAAU3B,GAFI,mBAEpC4B,EAFoC,KAE5BC,EAF4B,KAItCC,EAAQ,WACVD,EAAW7B,IAGT+B,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAIhC,MAAO,CAAEN,EAAQG,EAAmBD,I,yBClBlCK,EAAUC,8CAEVC,EAAoB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAE3CC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAgB,QAAXE,EAEME,MAAOD,GAIPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAM5BQ,EAAiB,SAAET,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAExCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAgB,QAAXV,EAEME,MAAOD,EAAI,CACdD,SACAG,QAAS,CACL,UAAWK,KAMZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,M,yBC3CrBY,EAAgB,WAAoB,IAAlBjD,EAAiB,uDAAR,GAEpC,OAAOA,EACFW,KAAK,SAAEC,GAAF,mBAAC,eACAA,GADD,IAEFsC,IAAKC,IAAQvC,EAAMsC,KAAME,SACzBC,MAAOF,IAAQvC,EAAMyC,OAAQD,eC0BnCE,EAAc,SAAE1C,GAAF,MAAc,CAC9BJ,KAAMX,EACNa,QAASE,IAQA2C,EAAwB,SAAE3C,GAAF,MAAc,CAC/CJ,KAAMX,IA4BJ2D,EAAe,SAAE5C,GAAF,MAAc,CAC/BJ,KAAMX,EACNa,QAASE,IA4BP6C,EAAe,iBAAQ,CACzBjD,KAAMX,IAwBJ6D,EAAe,SAAE1D,GAAF,MAAe,CAChCQ,KAAMX,EACNa,QAASV,IC7DP2D,EAAQ,SAAEC,GAAF,MAAa,CACvBpD,KAAMX,EACNa,QAASkD,IAGPC,EAAiB,iBAAO,CAC1BrD,KAAMX,IAGGiE,EAAc,WACvB,OAAO,SAAEC,GAELhB,aAAaiB,QACbD,EDoD0B,CAC9BvD,KAAMX,ICpDFkE,EAAUE,OAIZA,EAAS,iBAAO,CAClBzD,KAAMX,IClFGqE,EAAc,WAEvB,IAAMH,EAAWI,cAFY,EAKuB3C,EAAQ,CACxD4C,MAAO,GACPC,SAAU,KAPe,mBAKrBC,EALqB,KAKJC,EALI,KAUrBH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAQf,OACI,yBAAKG,UAAU,oBACX,yBAAKA,UAAU,iDACX,yBAAKA,UAAU,iBACX,yBAAKC,IAAMC,EAAQ,IAA2BF,UAAU,WAAWG,IAAI,eAE3E,yBAAKH,UAAU,kBACX,+CACA,0BACII,SAfN,SAAEhE,GACZA,EAAMiE,iBAENd,EDfkB,SAAEK,EAAOC,GAC/B,8CAAO,WAAON,GAAP,uBAAAe,EAAA,sEACoB3C,EAAmB,OAAQ,CAAEiC,QAAOC,YAAY,QADpE,cACGU,EADH,gBAEoCA,EAASC,OAF7C,gBAEKC,EAFL,EAEKA,KAAMC,EAFX,EAEWA,QAASC,EAFpB,EAEoBA,MAElBD,GAAWA,EAAQE,OAAS,EAC7BC,IAAMC,KAAMJ,IAEZnC,aAAawC,QAAQ,QAASJ,GAC9BpC,aAAawC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAAUJ,EAAM,CACZ+B,IAAKT,EAAKpE,IACVkB,KAAMkD,EAAKlD,KACXqC,MAAOa,EAAKb,SAGhBiB,IAAMM,QAAN,kBAA2BV,EAAKlD,KAAhC,OAhBD,4CAAP,sDCcc6D,CAAYxB,EAAOC,MAcb,yBAAKG,UAAU,cACX,2BACIhE,KAAK,QACLgE,UAAU,eACVqB,YAAY,QACZ9D,KAAK,QACLC,MAAQoC,EACR0B,SAAWvB,EACXwB,UAAQ,KAGhB,yBAAKvB,UAAU,cACX,2BACIhE,KAAK,WACLgE,UAAU,eACVqB,YAAY,WACZ9D,KAAK,WACLC,MAAQqC,EACRyB,SAAWvB,EACXwB,UAAQ,KAGhB,yBAAKvB,UAAU,cACX,2BACIhE,KAAK,SACLgE,UAAU,YACVxC,MAAM,aAKtB,yBAAKwC,UAAU,eACX,uBAAGA,UAAU,iBAAiBwB,KAAK,aAAnC,cAIR,wBAAIxB,UAAU,QAAd,sBChECyB,EAAiB,WAE1B,IAAMlC,EAAWI,cAFc,EAI2B3C,EAAQ,CAC9DO,KAAM,GACNqC,MAAO,GACPC,SAAU,GACV6B,UAAW,KARgB,mBAIvBC,EAJuB,KAIHC,EAJG,KAWvBrE,EAAqCoE,EAArCpE,KAAMqC,EAA+B+B,EAA/B/B,MAAOC,EAAwB8B,EAAxB9B,SAAU6B,EAAcC,EAAdD,UAY/B,OACI,yBAAK1B,UAAU,oBACX,yBAAKA,UAAU,iDACX,yBAAKA,UAAU,kBACX,wCACA,0BACAI,SAhBQ,SAAEhE,GAGtB,GAFAA,EAAMiE,iBAEDR,IAAa6B,EACd,OAAOb,IAAMC,KAAM,yCAGvBvB,EFCoB,SAAEhC,EAAMqC,EAAOC,GACvC,8CAAO,WAAON,GAAP,uBAAAe,EAAA,sEACoB3C,EAAmB,gBAAiB,CAAEJ,OAAMqC,QAAOC,YAAY,QADnF,cACGU,EADH,gBAEoCA,EAASC,OAF7C,gBAEKC,EAFL,EAEKA,KAAMC,EAFX,EAEWA,QAASC,EAFpB,EAEoBA,MAElBD,GAAWA,EAAQE,OAAS,EAC7BC,IAAMC,KAAMJ,IAEZnC,aAAawC,QAAQ,QAASJ,GAC9BpC,aAAawC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAAUJ,EAAM,CACZ+B,IAAKT,EAAKpE,IACVkB,KAAMkD,EAAKlD,KACXqC,MAAOa,EAAKb,SAGhBiB,IAAMM,QAAN,gBAAyBV,EAAKlD,KAA9B,0BAhBD,4CAAP,sDEFcsE,CAActE,EAAMqC,EAAOC,MAWrB,yBAAKG,UAAU,cACX,2BACIhE,KAAK,OACLgE,UAAU,eACVqB,YAAY,OACZ9D,KAAK,OACLC,MAAQD,EACR+D,SAAWM,EACXL,UAAQ,KAGhB,yBAAKvB,UAAU,cACX,2BACIhE,KAAK,QACLgE,UAAU,eACVqB,YAAY,QACZ9D,KAAK,QACLC,MAAQoC,EACR0B,SAAWM,EACXL,UAAQ,KAGhB,yBAAKvB,UAAU,cACX,2BACIhE,KAAK,WACLgE,UAAU,eACVqB,YAAY,WACZ9D,KAAK,WACLC,MAAQqC,EACRyB,SAAWM,EACXL,UAAQ,KAGhB,yBAAKvB,UAAU,cACX,2BACIhE,KAAK,WACLgE,UAAU,eACVqB,YAAY,mBACZ9D,KAAK,YACLC,MAAQkE,EACRJ,SAAWM,EACXL,UAAQ,KAGhB,yBAAKvB,UAAU,cACX,2BACIhE,KAAK,SACLgE,UAAU,YACVxC,MAAM,iBAO1B,wBAAIwC,UAAU,QAAd,sB,SC7FC8B,GAAe,CACxBC,SAAU,IACVC,KAAM,KCEGC,GAAS,WAElB,IAAM1C,EAAWI,cAETpC,EAAS2E,aAAY,SAAApG,GAAK,OAAIA,EAAMS,QAApCgB,KAMR,OACI,yBAAKyC,UAAU,mCACX,0BAAMA,UAAU,gBACVzC,GAGN,4BACIyC,UAAU,yBACVmC,QAZM,WACd5C,EAAUD,OAaF,uBAAGU,UAAU,wBACb,0CCvBHoC,GAAc,iBAAO,CAC9BpG,KAAMX,ICEGgH,GAAY,WAErB,IAAM9C,EAAWI,cAMjB,OACI,4BACIK,UAAU,sBACVmC,QAPU,WACd5C,EAAU6C,QAQN,uBAAGpC,UAAU,kB,oBCZZsC,GAAiB,WAC1B,IAAM/C,EAAWI,cAiBjB,OACI,4BACIK,UAAU,4BACVmC,QAlBY,WAChBI,KAAKC,KAAK,CACNC,MAAO,gBACPC,KAAM,8CACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,kBACnBC,iBAAkB,gBACnBC,MAAK,SAACC,GACDA,EAAOxF,OACP+B,ER4DZ,uCAAO,WAAOA,EAAU0D,GAAjB,qBAAA3C,EAAA,6DAEKjE,EAAQ4G,IAAWhH,SAASR,YAA5BY,IAFL,kBAMwBgC,EAAe,UAAD,OAAahC,GAAQ,GAAM,UANjE,cAMOkE,EANP,gBAO2BA,EAASC,OAPpC,iBAOSE,EAPT,EAOSA,UAEQA,EAAQE,OAAS,EAC7BC,IAAMC,KAAMJ,IAEZnB,EAAUN,KACV4B,IAAMM,QAAS,iCAbpB,kDAiBC+B,QAAQC,IAAR,MACAtC,IAAMuC,MAAO,sDAlBd,0DAAP,8DQlDQ,uBAAGpD,UAAU,iBACb,iDC5BCqD,GAAgB,SAAC,GAAe,IAAbjH,EAAY,EAAZA,MAEpBqG,EAAgBrG,EAAhBqG,MAAOrD,EAAShD,EAATgD,KACf,OACI,6BACI,6BACI,8BAAQqD,IAEZ,6BACI,0BAAMa,MAAO,CAAEC,WAAY,QACvB,uBAAGvD,UAAU,cAAcsD,MAAO,CAAEE,YAAa,SAC/CpE,EAAK7B,S,wCCFrBkG,GAAe,CACjBC,QAAS,CACLC,IAAM,MACNC,KAAO,MACPC,MAAQ,OACRC,OAAS,OACTN,YAAc,OACdO,UAAY,0BAIpBC,KAAMC,cAAc,SAEpB,IAAMC,GAAMvF,MAASwF,QAAQ,GAAGC,QAAQ,GAAGC,IAAK,EAAG,SAC7CC,GAASJ,GAAIK,QAAQF,IAAK,EAAG,SAE7BG,GAAY,CACd/B,MAAO,GACPgC,MAAO,GACP5F,MAAOqF,GAAItF,SACXF,IAAK4F,GAAO1F,UAGH8F,GAAgB,WAAO,IAExBnJ,EAAc2G,aAAY,SAAApG,GAAK,OAAIA,EAAMD,MAAzCN,UACAE,EAAgByG,aAAY,SAAApG,GAAK,OAAIA,EAAMG,YAA3CR,YAEF8D,EAAWI,cALc,EAOK1C,mBAAUiH,GAAItF,UAPnB,mBAOvB+F,EAPuB,KAOZC,EAPY,OAQC3H,mBAAUqH,GAAO1F,UARlB,mBAQvBiG,EARuB,KAQdC,EARc,OAUK7H,mBAAUuH,IAVf,mBAUxBO,EAVwB,KAUZC,EAVY,KAYvBP,EAA6BM,EAA7BN,MAAOhC,EAAsBsC,EAAtBtC,MAAO5D,EAAekG,EAAflG,MAAOH,EAAQqG,EAARrG,IAE7BuG,qBAAU,WAEFD,EADCvJ,GAGc+I,MAEpB,CAAE/I,EAAauJ,IAElB,IAAM3H,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB0H,EAAc,2BACPD,GADM,kBAERzH,EAAOC,KAAOD,EAAOE,UAIxB0H,EAAa,WACf3F,EJ1D2B,CAC/BvD,KAAMX,II0DFkE,EAAWR,KACXiG,EAAeR,KAsCnB,OACI,6BACI,kBAAC,KAAD,CACIW,OAAS5J,EACT6J,eAAiBF,EACjB5B,MAAQG,GACR4B,eAAiB,IACjBrF,UAAU,QACVsF,iBAAiB,oBAEjB,4BAAO7J,EAAe,aAAe,aACrC,6BACA,0BACIuE,UAAU,YACVI,SAjCE,SAAEhE,GAChBA,EAAMiE,iBAEN,IAAMkF,EAAc5G,IAAQE,GACtB2G,EAAe7G,IAAQD,GAE7B,GAAK6G,EAAYE,cAAeD,GAC5B,OAAOjD,KAAKC,KAAK,WAAY,mDAAoD,WAIjFjD,EADC9D,EV9CmB,SAAEW,GAC9B,8CAAO,WAAOmD,GAAP,mBAAAe,EAAA,+EAGwBjC,EAAe,UAAD,OAAajC,EAAMC,KAAQD,EAAO,OAHxE,cAGOmE,EAHP,gBAI2BA,EAASC,OAJpC,gBAISE,EAJT,EAISA,QAERwC,QAAQC,IAAKzC,GAERA,GAAWA,EAAQE,OAAS,EAC7BC,IAAMC,KAAMJ,IAEZnB,EAAUP,EAAc5C,IACxByE,IAAMM,QAAS,iCAZpB,kDAgBC+B,QAAQC,IAAR,MACAtC,IAAMuC,MAAO,sDAjBd,0DAAP,sDU8CkBsC,CAAkBX,GV1FR,SAAE3I,GAC9B,8CAAO,WAAQmD,EAAU0D,GAAlB,2BAAA3C,EAAA,+DAEmB2C,IAAW1G,KAAzB2E,EAFL,EAEKA,IAAK3D,EAFV,EAEUA,KAFV,kBAKwBc,EAAgB,SAAUjC,EAAO,QALzD,cAKOmE,EALP,gBAMiCA,EAASC,OAN1C,gBAMSE,EANT,EAMSA,QAASD,EANlB,EAMkBA,KAEZC,GAAWA,EAAQE,OAAS,EAC7BC,IAAMC,KAAMJ,IAEZtE,EAAMC,IAAMoE,EAAKpE,IACjBD,EAAMgD,KAAO,CACT8B,IAAKA,EACL3D,KAAMA,GAGVgC,EAAUT,EAAa1C,IACvByE,IAAMM,QAAS,2CAlBpB,kDAqBC+B,QAAQC,IAAR,MACAtC,IAAMuC,MAAO,oDAtBd,0DAAP,wDU2FkBuC,CAAkBZ,IAGhCG,MAmBgC,yBAAKlF,UAAU,cAC/B,kDACA,2BACIhE,KAAK,OACLgE,UAAU,eACVqB,YAAY,cACZ9D,KAAK,QACLqI,aAAa,MACbpI,MAAQiF,EACRnB,SAAWjE,EACXkE,UAAQ,IAEZ,2BAAOsE,GAAG,YAAY7F,UAAU,wBAAhC,4BAGJ,yBAAKA,UAAU,cACX,8BACIhE,KAAK,OACLgE,UAAU,eACVqB,YAAY,QACZyE,KAAK,IACLvI,KAAK,QACLC,MAAQiH,EACRnD,SAAWjE,IAEf,2BAAOwI,GAAG,YAAY7F,UAAU,wBAAhC,0BAGJ,6BAEA,yBAAKA,UAAU,cACX,sDACA,kBAAC,KAAD,CACIsB,SApFA,SAAElF,GACtBwI,EAAcxI,GACd4I,EAAc,2BACPD,GADM,IAETlG,MAAOzC,MAiFSoB,MAAQmH,EACR3E,UAAU,kBAIlB,yBAAKA,UAAU,cACX,oDACA,kBAAC,KAAD,CACIsB,SArFF,SAAElF,GACpB0I,EAAY1I,GACZ4I,EAAc,2BACPD,GADM,IAETrG,IAAKtC,MAkFWoB,MAAQqH,EACR7E,UAAU,kBAIlB,4BAAQhE,KAAK,SAASgE,UAAU,qCAC5B,uBAAGA,UAAU,gBACb,4C,cCxJxBrB,IAAOoH,OAAO,SACd,IAAMC,GAAYC,aAAgBtH,KAGrBuH,GAAiB,WAAO,IAAD,EAEAhE,aAAa,SAAApG,GAAK,OAAIA,EAAMG,YAApDT,EAFwB,EAExBA,OAAQC,EAFgB,EAEhBA,YACRyF,EAAQgB,aAAa,SAAApG,GAAK,OAAIA,EAAMS,QAApC2E,IAEF3B,EAAWI,cALe,EAOE1C,mBAAUsB,aAAaC,QAAQ,aAAe,SAPhD,mBAOxB2H,EAPwB,KAOdC,EAPc,KAShCnB,qBAAU,WAEN1F,EX2EJ,uCAAO,WAAOA,GAAP,uBAAAe,EAAA,+EAGwBjC,EAAgB,UAHxC,cAGOkC,EAHP,gBAIiCA,EAASC,OAJ1C,gBAISE,EAJT,EAISA,QAASD,EAJlB,EAIkBA,KAEZC,GAAWA,EAAQE,OAAS,EAC7BC,IAAMC,KAAMJ,IAENlF,EAASiD,EAAegC,GAC9BlB,EAAUL,EAAc1D,KAV7B,kDAaC0H,QAAQC,IAAR,MACAtC,IAAMuC,MAAM,uDAdb,0DAAP,yDWzEG,CAAE7D,IAkCL,OACI,yBAAKS,UAAU,mBACX,kBAAC,GAAD,MAEA,kBAAC,KAAD,CACIgG,UAAYA,GACZxK,OAASA,EACT6K,cAAc,QACdC,YAAY,MACZC,SAAWzE,GACX0E,gBAzBa,SAAEpK,EAAOyC,EAAOH,EAAK+H,GAS1C,MAAO,CACHnD,MARU,CACVoD,gBAAmBxF,IAAQ9E,EAAMgD,KAAK/C,KAAO6E,IAAQ9E,EAAMgD,KAAK8B,IAAQ,UAAY,UACpFyF,aAAc,MACdC,QAAS,GACTC,QAAS,WAoBLC,mBA3CU,SAAE1K,GACpBmD,EAAU6C,OA2CF2E,cAxCU,SAAE3K,GACpBmD,EXHsB,SAAEnD,GAAF,MAAc,CACxCJ,KAAMX,EACNa,QAASE,GWCK4K,CAAgB5K,KAwClB6K,aArCS,SAAE7K,GACnBmD,EAAUR,MAqCFmI,YAAa,EACbC,OAnCS,SAAE/K,GACnBgK,EAAahK,GACbmC,aAAawC,QAAS,WAAY3E,IAkC1BgL,KAAOjB,EACPkB,WAAY,CACRjL,MAAOiH,MAIf,kBAAC,GAAD,MAGM5H,GAAiB,kBAAC,GAAD,MAGvB,kBAAC,GAAD,Q,0BC5FC6L,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDACF,OACI,kBAAC,KAAD,iBAAYA,EAAZ,CACID,UAAY,SAACE,GAAD,OACNJ,EACM,kBAAC,KAAD,CAAUK,GAAG,MACb,kBAACJ,EAAeG,QCV3BE,GAAe,SAAC,GAItB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDACF,OACI,kBAAC,KAAD,iBAAYA,EAAZ,CACID,UAAY,SAACE,GAAD,OACNJ,EACM,kBAACC,EAAeG,GAChB,kBAAC,KAAD,CAAUC,GAAG,eCDxBE,GAAY,WAErB,IAAMvI,EAAWI,cAFU,EAGCuC,aAAY,SAAApG,GAAK,OAAIA,EAAMS,QAA/Cb,EAHmB,EAGnBA,WAAYwF,EAHO,EAGPA,IAMpB,OAJA+D,qBAAU,WACN1F,Eb+BJ,uCAAO,WAAOA,GAAP,qBAAAe,EAAA,sEACoBjC,EAAgB,oBADpC,cACGkC,EADH,gBAE2BA,EAASC,OAFpC,gBAEKC,EAFL,EAEKA,MAAME,EAFX,EAEWA,QAEAA,EAAMC,OAAS,GACzBrC,aAAawC,QAAQ,QAASJ,GAC9BpC,aAAawC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAAUJ,EAAM,CACZ+B,IAAKT,EAAKpE,IACVkB,KAAMkD,EAAKlD,SAGfgC,EAAUF,KAbX,2CAAP,yDa9BG,CAAEE,IAEA7D,EACO,4DAIR,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,GAAD,CAAaqM,OAAK,EAACC,KAAK,SAASP,UAAY/H,EAAc6H,kBAAoBrG,IAC/E,kBAAC,GAAD,CAAa6G,OAAK,EAACC,KAAK,YAAYP,UAAYhG,EAAiB8F,kBAAoBrG,IACrF,kBAAC,GAAD,CAAc6G,OAAK,EAACC,KAAK,IAAIP,UAAYvB,GAAiBqB,kBAAoBrG,IAE9E,kBAAC,KAAD,CAAU0G,GAAG,SCzBhBK,I,OAAc,WACvB,OACI,kBAAC,IAAD,CAAUrL,MAAQA,GACd,kBAAC,GAAD,MACA,kBAAC,IAAD,CACIsL,SAAS,YACTC,aAAc,EACdC,UAAY,U,OCT5BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U,6ECX1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.65b3b1f9.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinisih: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaño de Angello!',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 1, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '1234567',\r\n//         name: 'Angello'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => ( event._id === action.payload._id ) ? action.payload : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => ( event._id !== state.activeEvent._id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    isChecking: true\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                isChecking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinisih:\r\n            return {\r\n                ...state,\r\n                isChecking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                isChecking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [ values, setValues ] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost://4000/api/events/\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url );\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url,{\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events\r\n        .map( ( event ) => ({\r\n            ...event,\r\n            end: moment( event.end ).toDate(),\r\n            start: moment( event.start ).toDate()\r\n        }) );\r\n\r\n}\r\n","import { types } from '../types/types';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const response = await fetchWithToken( 'events', event, 'POST' );\r\n            const { Message, Data } = await response.json();\r\n\r\n            if ( Message && Message.length > 0 ) {\r\n                toast.warn( Message );\r\n            } else {\r\n                event._id = Data._id;\r\n                event.user = {\r\n                    uid: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( eventAddNew( event ) );\r\n                toast.success( 'The event has been successfully saved.' );\r\n            }\r\n        } catch ( error ) {\r\n            console.log( error );\r\n            toast.error( 'An error has ocurred while the event was saving!' );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = ( event ) => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const response = await fetchWithToken( `events/${ event._id }`, event, 'PUT' );\r\n            const { Message } = await response.json();\r\n\r\n            console.log( Message );\r\n\r\n            if ( Message && Message.length > 0 ) {\r\n                toast.warn( Message );\r\n            } else {\r\n                dispatch( eventUpdated( event ) );\r\n                toast.success( 'This event has been updated.' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log( error );\r\n            toast.error( 'An error has ocurred while the event was UPDATING!' );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { _id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const response = await fetchWithToken( `events/${ _id }`, {  }, 'DELETE' );\r\n            const { Message } = await response.json();\r\n\r\n            if ( Message && Message.length > 0 ) {\r\n                toast.warn( Message );\r\n            } else {\r\n                dispatch( eventDeleted() );\r\n                toast.success( 'The event has beend DELETED.' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log( error );\r\n            toast.error( 'An error has ocurred while the event was DELETING!' );\r\n        } \r\n\r\n    }\r\n};\r\n\r\nconst eventDeleted = ( ) => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const response = await fetchWithToken( 'events' );\r\n            const { Message, Data } = await response.json();\r\n\r\n            if ( Message && Message.length > 0 ) {\r\n                toast.warn( Message );\r\n            } else {\r\n                const events = prepareEvents( Data );\r\n                dispatch( eventsLoaded( events ) );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error('An error has ocurred while the events were LOADING!');\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst eventsLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});\r\n","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from '../types/types';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const response = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\r\n        const { Data, Message, Token } = await response.json();\r\n\r\n        if ( Message && Message.length > 0 ) {\r\n            toast.warn( Message );\r\n        } else {\r\n            localStorage.setItem('token', Token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: Data._id,\r\n                name: Data.name,\r\n                email: Data.email\r\n            }) );\r\n\r\n            toast.success( `Welcome ${ Data.name }!` );\r\n        }\r\n    }\r\n}\r\n\r\nexport const registerUser = ( name, email, password ) => {\r\n    return async( dispatch ) => {\r\n        const response = await fetchWithoutToken( 'auth/register', { name, email, password }, 'POST' );\r\n        const { Data, Message, Token } = await response.json();\r\n\r\n        if ( Message && Message.length > 0 ) {\r\n            toast.warn( Message );\r\n        } else {\r\n            localStorage.setItem('token', Token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: Data._id,\r\n                name: Data.name,\r\n                email: Data.email\r\n            }) );\r\n\r\n            toast.success( `Hello ${ Data.name } enjoy Calendar App!` );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const response = await fetchWithToken( 'auth/renew-token');\r\n        const { Data, Token } = await response.json();\r\n\r\n        if ( Token && Token.length > 0 ) {\r\n            localStorage.setItem('token', Token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: Data._id,\r\n                name: Data.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinisih\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logOut() );\r\n    }\r\n}\r\n\r\nconst logOut = () => ({\r\n    type: types.authLogout\r\n});\r\n","import React from 'react';\r\nimport './custom-style.css';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formLoginValues;\r\n\r\n    const logIn = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        dispatch( startLogin( email, password) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"custom-container\">\r\n            <div className=\"col-md-4 custom-form login-register-animation\">\r\n                <div className=\"img-container\">\r\n                    <img src={ require('../../assets/user.svg') } className='user-img' alt=\"User icon\"/>\r\n                </div>\r\n                <div className=\"form-container\">\r\n                    <h3>Calendar Events</h3>\r\n                    <form\r\n                        onSubmit={ logIn }\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                value={ email }\r\n                                onChange={ handleLoginInputChange }\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                value={ password }\r\n                                onChange={ handleLoginInputChange }\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"form-footer\">\r\n                    <a className=\"underlineHover\" href=\"/register\">Register</a>\r\n                </div>\r\n            </div>\r\n\r\n            <h4 className=\"gabo\">Angello Gámez</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './custom-style.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { toast } from 'react-toastify';\r\nimport { registerUser } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () =>{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formRegisterValues;\r\n\r\n    const registerNewUser = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        if ( password !== password2 ) {\r\n            return toast.warn( 'Password confirmation does not match.' );\r\n        }\r\n\r\n        dispatch( registerUser( name, email, password ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"custom-container\">\r\n            <div className=\"col-md-4 custom-form login-register-animation\">\r\n                <div className=\"form-container\">\r\n                    <h3>Register</h3>\r\n                    <form\r\n                    onSubmit={ registerNewUser }\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"name\"\r\n                                value={ name }\r\n                                onChange={ handleRegisterInputChange }\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                value={ email }\r\n                                onChange={ handleRegisterInputChange }\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                value={ password }\r\n                                onChange={ handleRegisterInputChange }\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\"\r\n                                name=\"password2\"\r\n                                value={ password2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                                required\r\n                            /> \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Register\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <h4 className=\"gabo\">Angello Gámez</h4>\r\n        </div>\r\n    )\r\n}","export const customTitles = {\r\n    previous: '<',\r\n    next: '>'\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const logingOut = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ logingOut }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal    \r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openModal = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ openModal }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteEvent = () => {\r\n        Swal.fire({\r\n            title: 'Delete Event?',\r\n            text: 'Are you sure you want to delete this event?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                dispatch( eventStartDelete() );\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ deleteEvent }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete event</span>\r\n        </button>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span>{ title }</span>\r\n            </div>\r\n            <div>\r\n                <span style={{ fontWeight: '100' }}>\r\n                    <i className=\"fas fa-user\" style={{ marginRight: '5px' }}></i>\r\n                    { user.name }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top : '50%',\r\n        left : '50%',\r\n        right : 'auto',\r\n        bottom : 'auto',\r\n        marginRight : '-50%',\r\n        transform : 'translate(-50%, -50%)'\r\n    }\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours' );\r\nconst finish = now.clone().add( 1, 'hours' );\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: finish.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ startDate, setStartDate ] = useState( now.toDate() );\r\n    const [ endDate, setEndDate ] = useState( finish.toDate() );\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [ activeEvent, setFormValues ]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch ( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDate = ( event ) => {\r\n        setStartDate( event );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: event\r\n        });\r\n    }\r\n\r\n    const handleEndDate = ( event ) => {\r\n        setEndDate( event );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: event\r\n        })\r\n    }\r\n\r\n    const saveEvent = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentFinish = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentFinish ) ) {\r\n            return Swal.fire('Warning!', 'The END DATE should be greather than START DATE.', 'warning');\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={ modalOpen }\r\n                onRequestClose={ closeModal }\r\n                style={ customStyles }\r\n                closeTimeoutMS={ 200 }\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-background\"\r\n            >\r\n                <h1>{ (activeEvent) ? 'Edit event' : 'New Event' }</h1>\r\n                <hr/>\r\n                <form\r\n                    className=\"container\"\r\n                    onSubmit={ saveEvent }\r\n                >\r\n                                        <div className=\"form-group\">\r\n                        <label>Title and notes</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Event Title\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={ title }\r\n                            onChange={ handleInputChange }\r\n                            required\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Short title description</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notes\"\r\n                            rows=\"3\"\r\n                            name=\"notes\"\r\n                            value={ notes }\r\n                            onChange={ handleInputChange }\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Aditional information</small>\r\n                    </div>\r\n\r\n                    <hr />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Start date and time</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleStartDate }\r\n                            value={ startDate }\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>End date and time</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleEndDate }\r\n                            value={ endDate }\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Save</span>\r\n                    </button>\r\n\r\n                </form>\r\n                \r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { customTitles } from '../../helpers/calendar-titles';\r\nimport { Navbar } from '../../components/ui/Navbar';\r\nimport { AddNewFab } from '../../components/ui/AddNewFab';\r\nimport { DeleteEventFab } from '../../components/ui/DeleteEventFab';\r\nimport { CalendarEvent } from '../../components/calendar/CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/en-gb';\r\n\r\nmoment.locale('en-gb');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ lastView, setLastView ] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    const onDoubleClick = ( event ) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = ( event ) => {\r\n        dispatch( eventSetActive( event ) );\r\n    }\r\n\r\n    const onSelectSlot = ( event ) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const onViewChange = ( event ) => {\r\n        setLastView( event );\r\n        localStorage.setItem( 'lastView', event );\r\n    }\r\n\r\n    const eventSylteGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id || uid === event.user.uid ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.9,\r\n            display: 'block'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ customTitles }\r\n                eventPropGetter={ eventSylteGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <CalendarModal />\r\n\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n\r\n            <AddNewFab />\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return(\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            ) }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"login\" /> )\r\n            ) }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { isChecking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [ dispatch ])\r\n\r\n    if ( isChecking ) {\r\n        return (<h5>Please wait a few seconds...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute exact path=\"/login\" component={ LoginScreen } isAuthenticated={ !!uid } />\r\n                <PublicRoute exact path=\"/register\" component={ RegisterScreen } isAuthenticated={ !!uid } />\r\n                <PrivateRoute exact path=\"/\" component={ CalendarScreen } isAuthenticated={ !!uid } />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                newestOnTop={ true }\r\n                autoClose={ 3500 }\r\n            />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CalendarApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/user.987813c7.svg\";"],"sourceRoot":""}